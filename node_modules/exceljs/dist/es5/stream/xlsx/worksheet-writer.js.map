{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"names":["_","require","RelType","colCache","Dimensions","StringBuf","Row","Column","SheetRelsWriter","SheetCommentsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","SheetProtectionXform","PageMarginsXform","PageSetupXform","AutoFilterXform","PictureXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","sheetProtection","pageMargins","pageSeteup","autoFilter","picture","WorksheetWriter","module","exports","options","id","name","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_sheetCommentsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","rowBreaks","colBreaks","useSharedStrings","_workbook","workbook","hasComments","_views","views","_writeOpenWorksheet","background","type","imageName","addMedia","pictureId","Target","Type","Image","_background","rId","startedData","prototype","stream","_stream","_openStream","pause","destroy","Error","commit","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeDataValidations","_writeSheetProtection","_writePageMargins","_writePageSetup","_writeBackground","_writeLegacyData","_writeCloseWorksheet","end","dimensions","value","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","max","count","defn","column","push","getColumnKey","key","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","_nextRow","eachRow","iteratee","includeEmpty","i","getRow","hasValues","number","_commitRow","found","shift","lastRow","findRow","rowNumber","index","addRow","values","findCell","r","address","getAddress","getCell","getCellEx","mergeCells","Array","slice","call","arguments","merge","intersects","master","j","_write","text","reset","addText","write","_writeSheetProperties","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","_writeSheetFormatProperties","sheetFormatPropertiesModel","_writeColumns","cols","toModel","prepare","styles","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","comments","addComments","_hyperlinks","vmlRelId","_writeDimensions"],"mappings":"AAAA;;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,wBAAD,CAAjB;;AAEA,IAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAME,QAAQ,GAAGF,OAAO,CAAC,uBAAD,CAAxB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,wBAAD,CAAzB;;AAEA,IAAMK,GAAG,GAAGL,OAAO,CAAC,eAAD,CAAnB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,kBAAD,CAAtB;;AAEA,IAAMO,eAAe,GAAGP,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAMQ,mBAAmB,GAAGR,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAMS,eAAe,GAAGT,OAAO,CAAC,4BAAD,CAA/B;;AAEA,IAAMU,SAAS,GAAG,IAAIN,SAAJ,EAAlB,C,CAEA;AACA;;AACA,IAAMO,SAAS,GAAGX,OAAO,CAAC,6BAAD,CAAzB;;AACA,IAAMY,oBAAoB,GAAGZ,OAAO,CAAC,+CAAD,CAApC;;AACA,IAAMa,oBAAoB,GAAGb,OAAO,CAAC,+CAAD,CAApC;;AACA,IAAMc,0BAA0B,GAAGd,OAAO,CAAC,sDAAD,CAA1C;;AACA,IAAMe,QAAQ,GAAGf,OAAO,CAAC,kCAAD,CAAxB;;AACA,IAAMgB,QAAQ,GAAGhB,OAAO,CAAC,kCAAD,CAAxB;;AACA,IAAMiB,cAAc,GAAGjB,OAAO,CAAC,wCAAD,CAA9B;;AACA,IAAMkB,cAAc,GAAGlB,OAAO,CAAC,yCAAD,CAA9B;;AACA,IAAMmB,oBAAoB,GAAGnB,OAAO,CAAC,+CAAD,CAApC;;AACA,IAAMoB,gBAAgB,GAAGpB,OAAO,CAAC,2CAAD,CAAhC;;AACA,IAAMqB,cAAc,GAAGrB,OAAO,CAAC,yCAAD,CAA9B;;AACA,IAAMsB,eAAe,GAAGtB,OAAO,CAAC,0CAAD,CAA/B;;AACA,IAAMuB,YAAY,GAAGvB,OAAO,CAAC,sCAAD,CAA5B,C,CAEA;;;AACA,IAAMwB,KAAK,GAAG;AACZC,EAAAA,eAAe,EAAE,IAAIb,oBAAJ,EADL;AAEZc,EAAAA,eAAe,EAAE,IAAIb,oBAAJ,EAFL;AAGZc,EAAAA,qBAAqB,EAAE,IAAIb,0BAAJ,EAHX;AAIZc,EAAAA,OAAO,EAAE,IAAIjB,SAAJ,CAAc;AAACkB,IAAAA,GAAG,EAAE,MAAN;AAAcC,IAAAA,MAAM,EAAE,KAAtB;AAA6BC,IAAAA,UAAU,EAAE,IAAIhB,QAAJ;AAAzC,GAAd,CAJG;AAKZiB,EAAAA,GAAG,EAAE,IAAIhB,QAAJ,EALO;AAMZiB,EAAAA,UAAU,EAAE,IAAItB,SAAJ,CAAc;AAAEkB,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,MAAM,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE,IAAId,cAAJ;AAAhD,GAAd,CANA;AAOZiB,EAAAA,UAAU,EAAE,IAAIvB,SAAJ,CAAc;AAAEkB,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,MAAM,EAAE,KAA7B;AAAoCC,IAAAA,UAAU,EAAE,IAAIb,cAAJ;AAAhD,GAAd,CAPA;AAQZiB,EAAAA,eAAe,EAAE,IAAIhB,oBAAJ,EARL;AASZiB,EAAAA,WAAW,EAAE,IAAIhB,gBAAJ,EATD;AAUZiB,EAAAA,UAAU,EAAE,IAAIhB,cAAJ,EAVA;AAWZiB,EAAAA,UAAU,EAAE,IAAIhB,eAAJ,EAXA;AAYZiB,EAAAA,OAAO,EAAE,IAAIhB,YAAJ;AAZG,CAAd,C,CAeA;;AAEA,IAAMiB,eAAe,GAAIC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC1D;AACA,OAAKC,EAAL,GAAUD,OAAO,CAACC,EAAlB,CAF0D,CAI1D;;AACA,OAAKC,IAAL,GAAYF,OAAO,CAACE,IAAR,mBAAwB,KAAKD,EAA7B,CAAZ,CAL0D,CAO1D;;AACA,OAAKE,KAAL,GAAaH,OAAO,CAACG,KAAR,IAAiB,SAA9B,CAR0D,CAU1D;AACA;;AACA,OAAKC,KAAL,GAAa,EAAb,CAZ0D,CAc1D;;AACA,OAAKC,QAAL,GAAgB,IAAhB,CAf0D,CAiB1D;;AACA,OAAKC,KAAL,GAAa,EAAb,CAlB0D,CAoB1D;;AACA,OAAKC,OAAL,GAAe,EAAf;;AACA,OAAKA,OAAL,CAAaC,GAAb,GAAmB,YAAW,CAAE,CAAhC,CAtB0D,CAsBxB;AAElC;;;AACA,OAAKC,gBAAL,GAAwB,IAAI7C,eAAJ,CAAoBoC,OAApB,CAAxB;AAEA,OAAKU,oBAAL,GAA4B,IAAI7C,mBAAJ,CAAwB,IAAxB,EAA8B,KAAK4C,gBAAnC,EAAqDT,OAArD,CAA5B,CA3B0D,CA8B1D;;AACA,OAAKW,WAAL,GAAmB,IAAInD,UAAJ,EAAnB,CA/B0D,CAiC1D;;AACA,OAAKoD,QAAL,GAAgB,CAAhB,CAlC0D,CAoC1D;;AACA,OAAKC,SAAL,GAAiB,KAAjB,CArC0D,CAuC1D;;AACA,OAAK/B,eAAL,GAAuB,IAAIhB,eAAJ,EAAvB,CAxC0D,CA0C1D;;AACA,OAAKgD,SAAL,GAAiB,EAAjB;AACA,OAAKC,WAAL,GAAmB,CAAnB,CA5C0D,CA8C1D;;AACA,OAAKC,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAChB,EADgB,EAEhB;AACEC,IAAAA,gBAAgB,EAAE,EADpB;AAEEC,IAAAA,SAAS,EAAE,EAFb;AAGEC,IAAAA,eAAe,EAAE,CAHnB;AAIEC,IAAAA,eAAe,EAAE;AAJnB,GAFgB,EAQhBtB,OAAO,CAACgB,UARQ,CAAlB,CA/C0D,CA0D1D;;AACA,OAAKO,SAAL,GAAiBN,MAAM,CAACC,MAAP,CACf,EADe,EAEf;AACEM,IAAAA,OAAO,EAAE;AAACC,MAAAA,IAAI,EAAE,GAAP;AAAYC,MAAAA,KAAK,EAAE,GAAnB;AAAwBC,MAAAA,GAAG,EAAE,IAA7B;AAAmCC,MAAAA,MAAM,EAAE,IAA3C;AAAiDC,MAAAA,MAAM,EAAE,GAAzD;AAA8DC,MAAAA,MAAM,EAAE;AAAtE,KADX;AAEEC,IAAAA,WAAW,EAAE,UAFf;AAGEC,IAAAA,aAAa,EAAE,UAHjB;AAIEC,IAAAA,WAAW,EAAE,UAJf;AAKEC,IAAAA,SAAS,EAAE,CAAC,EAAElC,OAAO,CAACuB,SAAR,IAAsB,CAACvB,OAAO,CAACuB,SAAR,CAAkBY,UAAlB,IAAgCnC,OAAO,CAACuB,SAAR,CAAkBa,WAAnD,KAAmE,CAACpC,OAAO,CAACuB,SAAR,CAAkBc,KAA9G,CALd;AAMEC,IAAAA,SAAS,EAAE,cANb;AAOEC,IAAAA,aAAa,EAAE,KAPjB;AAQEC,IAAAA,KAAK,EAAE,KART;AASEC,IAAAA,YAAY,EAAE,MAThB;AAUEC,IAAAA,MAAM,EAAE,WAVV;AAWEL,IAAAA,KAAK,EAAE,GAXT;AAYEF,IAAAA,UAAU,EAAE,CAZd;AAaEC,IAAAA,WAAW,EAAE,CAbf;AAcEO,IAAAA,SAAS,EAAEC,SAdb;AAeEC,IAAAA,iBAAiB,EAAE,KAfrB;AAgBEC,IAAAA,aAAa,EAAE,KAhBjB;AAiBEC,IAAAA,kBAAkB,EAAE,KAjBtB;AAkBEC,IAAAA,gBAAgB,EAAE,KAlBpB;AAmBEC,IAAAA,SAAS,EAAE,IAnBb;AAoBEC,IAAAA,SAAS,EAAE;AApBb,GAFe,EAwBflD,OAAO,CAACuB,SAxBO,CAAjB,CA3D0D,CAsF1D;;AACA,OAAK4B,gBAAL,GAAwBnD,OAAO,CAACmD,gBAAR,IAA4B,KAApD;AAEA,OAAKC,SAAL,GAAiBpD,OAAO,CAACqD,QAAzB;AAEA,OAAKC,WAAL,GAAmB,KAAnB,CA3F0D,CA6F1D;;AACA,OAAKC,MAAL,GAAcvD,OAAO,CAACwD,KAAR,IAAiB,EAA/B,CA9F0D,CAgG1D;;AACA,OAAK7D,UAAL,GAAkBK,OAAO,CAACL,UAAR,IAAsB,IAAxC,CAjG0D,CAmG1D;;AACA,OAAK8D,mBAAL,GApG0D,CAsG1D;;;AACA,MAAIzD,OAAO,CAAC0D,UAAR,IAAsB1D,OAAO,CAAC0D,UAAR,CAAmBC,IAAnB,KAA4B,OAAtD,EAA+D;AAC7D,QAAMC,SAAS,GAAG,KAAKR,SAAL,CAAeS,QAAf,CAAwB7D,OAAO,CAAC0D,UAAhC,CAAlB;;AACA,QAAMI,SAAS,GAAG,KAAKrD,gBAAL,CAAsBoD,QAAtB,CAA+B;AAC/CE,MAAAA,MAAM,qBAAcH,SAAd,CADyC;AAE/CI,MAAAA,IAAI,EAAE1G,OAAO,CAAC2G;AAFiC,KAA/B,CAAlB;;AAIA,SAAKC,WAAL,GAAmB;AACjBC,MAAAA,GAAG,EAAEL;AADY,KAAnB;AAGD;;AAED,OAAKM,WAAL,GAAmB,KAAnB;AACD,CAnHD;;AAqHAvE,eAAe,CAACwE,SAAhB,GAA4B;AAC1B,MAAIhB,QAAJ,GAAe;AACb,WAAO,KAAKD,SAAZ;AACD,GAHyB;;AAK1B,MAAIkB,MAAJ,GAAa;AACX,QAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB;AACA,WAAKA,OAAL,GAAe,KAAKnB,SAAL,CAAeoB,WAAf,+BAAkD,KAAKvE,EAAvD,UAAf,CAFiB,CAIjB;;AACA,WAAKsE,OAAL,CAAaE,KAAb;AACD;;AACD,WAAO,KAAKF,OAAZ;AACD,GAdyB;;AAgB1B;AACA;AACAG,EAAAA,OAlB0B,qBAkBhB;AACR,UAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD,GApByB;AAsB1BC,EAAAA,MAtB0B,oBAsBjB;AAAA;;AACP,QAAI,KAAK/D,SAAT,EAAoB;AAClB;AACD,KAHM,CAIP;;;AACA,SAAKT,KAAL,CAAWyE,OAAX,CAAmB,UAAAC,IAAI,EAAI;AACzB,UAAIA,IAAJ,EAAU;AACR;AACA,QAAA,KAAI,CAACC,SAAL,CAAeD,IAAf;AACD;AACF,KALD,EALO,CAYP;;;AACA,SAAK1E,KAAL,GAAa,IAAb;;AAGA,QAAI,CAAC,KAAKgE,WAAV,EAAuB;AACrB,WAAKY,mBAAL;AACD;;AACD,SAAKC,oBAAL;;AACA,SAAKC,gBAAL;;AACA,SAAKC,gBAAL,GArBO,CAuBP;AACA;;;AAEA,SAAKC,gBAAL;;AACA,SAAKC,qBAAL;;AACA,SAAKC,qBAAL;;AACA,SAAKC,iBAAL;;AACA,SAAKC,eAAL;;AACA,SAAKC,gBAAL,GA/BO,CAiCP;;;AACA,SAAKC,gBAAL;;AAEA,SAAKC,oBAAL,GApCO,CAqCP;;;AACA,SAAKrB,MAAL,CAAYsB,GAAZ;;AAEA,SAAKlF,oBAAL,CAA0BkE,MAA1B,GAxCO,CAyCP;;;AACA,SAAKnE,gBAAL,CAAsBmE,MAAtB;;AAEA,SAAK/D,SAAL,GAAiB,IAAjB;AACD,GAnEyB;;AAqE1B;AACA,MAAIgF,UAAJ,GAAiB;AACf,WAAO,KAAKlF,WAAZ;AACD,GAxEyB;;AA0E1B,MAAI6C,KAAJ,GAAY;AACV,WAAO,KAAKD,MAAZ;AACD,GA5EyB;;AA8E1B;AACA;AAEA;AACA,MAAItE,OAAJ,GAAc;AACZ,WAAO,KAAKoB,QAAZ;AACD,GApFyB;;AAsF1B;AACA;AACA,MAAIpB,OAAJ,CAAY6G,KAAZ,EAAmB;AAAA;;AACjB;AACA,SAAKC,eAAL,GAAuBD,KAAK,CAACE,MAAN,CAAa,UAACC,EAAD,EAAKC,EAAL,EAAY;AAC9C,UAAMC,WAAW,GAAID,EAAE,CAACrE,MAAH,IAAa,CAAd,IAAqBqE,EAAE,CAACE,OAAH,IAAcF,EAAE,CAACE,OAAH,CAAWjH,MAA9C,IAAyD,CAA7E;AACA,aAAOkH,IAAI,CAACC,GAAL,CAASL,EAAT,EAAaE,WAAb,CAAP;AACD,KAHsB,EAGpB,CAHoB,CAAvB,CAFiB,CAOjB;;AACA,QAAII,KAAK,GAAG,CAAZ;AACA,QAAMtH,OAAO,GAAI,KAAKoB,QAAL,GAAgB,EAAjC;AACAyF,IAAAA,KAAK,CAACjB,OAAN,CAAc,UAAA2B,IAAI,EAAI;AACpB,UAAMC,MAAM,GAAG,IAAI9I,MAAJ,CAAW,MAAX,EAAiB4I,KAAK,EAAtB,EAA0B,KAA1B,CAAf;AACAtH,MAAAA,OAAO,CAACyH,IAAR,CAAaD,MAAb;AACAA,MAAAA,MAAM,CAACD,IAAP,GAAcA,IAAd;AACD,KAJD;AAKD,GAvGyB;;AAyG1BG,EAAAA,YAzG0B,wBAyGbC,GAzGa,EAyGR;AAChB,WAAO,KAAKtG,KAAL,CAAWsG,GAAX,CAAP;AACD,GA3GyB;AA4G1BC,EAAAA,YA5G0B,wBA4GbD,GA5Ga,EA4GRd,KA5GQ,EA4GD;AACvB,SAAKxF,KAAL,CAAWsG,GAAX,IAAkBd,KAAlB;AACD,GA9GyB;AA+G1BgB,EAAAA,eA/G0B,2BA+GVF,GA/GU,EA+GL;AACnB,WAAO,KAAKtG,KAAL,CAAWsG,GAAX,CAAP;AACD,GAjHyB;AAkH1BG,EAAAA,aAlH0B,yBAkHZC,CAlHY,EAkHT;AACf5J,IAAAA,CAAC,CAAC6J,IAAF,CAAO,KAAK3G,KAAZ,EAAmB0G,CAAnB;AACD,GApHyB;AAsH1B;AACA;AACAE,EAAAA,SAxH0B,qBAwHhBC,CAxHgB,EAwHb;AACX,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB;AACA,UAAMC,GAAG,GAAG,KAAK9G,KAAL,CAAW6G,CAAX,CAAZ;AACA,UAAIC,GAAJ,EAAS,OAAOA,GAAP,CAHgB,CAKzB;;AACAD,MAAAA,CAAC,GAAG5J,QAAQ,CAAC8J,GAAT,CAAaF,CAAb,CAAJ;AACD;;AACD,QAAI,CAAC,KAAK9G,QAAV,EAAoB;AAClB,WAAKA,QAAL,GAAgB,EAAhB;AACD;;AACD,QAAI8G,CAAC,GAAG,KAAK9G,QAAL,CAAclB,MAAtB,EAA8B;AAC5B,UAAImI,CAAC,GAAG,KAAKjH,QAAL,CAAclB,MAAd,GAAuB,CAA/B;;AACA,aAAOmI,CAAC,IAAIH,CAAZ,EAAe;AACb,aAAK9G,QAAL,CAAcqG,IAAd,CAAmB,IAAI/I,MAAJ,CAAW,IAAX,EAAiB2J,CAAC,EAAlB,CAAnB;AACD;AACF;;AACD,WAAO,KAAKjH,QAAL,CAAc8G,CAAC,GAAG,CAAlB,CAAP;AACD,GA3IyB;;AA6I1B;AACA;AACA,MAAII,QAAJ,GAAe;AACb,WAAO,KAAK3G,QAAL,GAAgB,KAAKR,KAAL,CAAWjB,MAAlC;AACD,GAjJyB;;AAmJ1B;AACAqI,EAAAA,OApJ0B,mBAoJlBxH,OApJkB,EAoJTyH,QApJS,EAoJC;AACzB,QAAI,CAACA,QAAL,EAAe;AACbA,MAAAA,QAAQ,GAAGzH,OAAX;AACAA,MAAAA,OAAO,GAAG4C,SAAV;AACD;;AACD,QAAI5C,OAAO,IAAIA,OAAO,CAAC0H,YAAvB,EAAqC;AACnC,UAAMJ,CAAC,GAAG,KAAKC,QAAf;;AACA,WAAK,IAAII,CAAC,GAAG,KAAK/G,QAAlB,EAA4B+G,CAAC,GAAGL,CAAhC,EAAmCK,CAAC,EAApC,EAAwC;AACtCF,QAAAA,QAAQ,CAAC,KAAKG,MAAL,CAAYD,CAAZ,CAAD,EAAiBA,CAAjB,CAAR;AACD;AACF,KALD,MAKO;AACL,WAAKvH,KAAL,CAAWyE,OAAX,CAAmB,UAAAxF,GAAG,EAAI;AACxB,YAAIA,GAAG,CAACwI,SAAR,EAAmB;AACjBJ,UAAAA,QAAQ,CAACpI,GAAD,EAAMA,GAAG,CAACyI,MAAV,CAAR;AACD;AACF,OAJD;AAKD;AACF,GArKyB;AAuK1BC,EAAAA,UAvK0B,sBAuKfjD,IAvKe,EAuKT;AACf;AACA,QAAIkD,KAAK,GAAG,KAAZ;;AACA,WAAO,KAAK5H,KAAL,CAAWjB,MAAX,IAAqB,CAAC6I,KAA7B,EAAoC;AAClC,UAAM3I,GAAG,GAAG,KAAKe,KAAL,CAAW6H,KAAX,EAAZ;;AACA,WAAKrH,QAAL;;AACA,UAAIvB,GAAJ,EAAS;AACP,aAAK0F,SAAL,CAAe1F,GAAf;;AACA2I,QAAAA,KAAK,GAAG3I,GAAG,CAACyI,MAAJ,KAAehD,IAAI,CAACgD,MAA5B;AACA,aAAKlH,QAAL,GAAgBvB,GAAG,CAACyI,MAAJ,GAAa,CAA7B;AACD;AACF;AACF,GAnLyB;;AAqL1B,MAAII,OAAJ,GAAc;AACZ;AACA,QAAI,KAAK9H,KAAL,CAAWjB,MAAf,EAAuB;AACrB,aAAO,KAAKiB,KAAL,CAAW,KAAKA,KAAL,CAAWjB,MAAX,GAAoB,CAA/B,CAAP;AACD;;AACD,WAAOyD,SAAP;AACD,GA3LyB;;AA6L1B;AACAuF,EAAAA,OA9L0B,mBA8LlBC,SA9LkB,EA8LP;AACjB,QAAMC,KAAK,GAAGD,SAAS,GAAG,KAAKxH,QAA/B;AACA,WAAO,KAAKR,KAAL,CAAWiI,KAAX,CAAP;AACD,GAjMyB;AAmM1BT,EAAAA,MAnM0B,kBAmMnBQ,SAnMmB,EAmMR;AAChB,QAAMC,KAAK,GAAGD,SAAS,GAAG,KAAKxH,QAA/B,CADgB,CAGhB;;AACA,QAAIyH,KAAK,GAAG,CAAZ,EAAe;AACb,YAAM,IAAI1D,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,QAAItF,GAAG,GAAG,KAAKe,KAAL,CAAWiI,KAAX,CAAV;;AACA,QAAI,CAAChJ,GAAL,EAAU;AACR,WAAKe,KAAL,CAAWiI,KAAX,IAAoBhJ,GAAG,GAAG,IAAI3B,GAAJ,CAAQ,IAAR,EAAc0K,SAAd,CAA1B;AACD;;AACD,WAAO/I,GAAP;AACD,GA/MyB;AAiN1BiJ,EAAAA,MAjN0B,kBAiNnBxC,KAjNmB,EAiNZ;AACZ,QAAMzG,GAAG,GAAG,IAAI3B,GAAJ,CAAQ,IAAR,EAAc,KAAK6J,QAAnB,CAAZ;AACA,SAAKnH,KAAL,CAAWf,GAAG,CAACyI,MAAJ,GAAa,KAAKlH,QAA7B,IAAyCvB,GAAzC;AACAA,IAAAA,GAAG,CAACkJ,MAAJ,GAAazC,KAAb;AACA,WAAOzG,GAAP;AACD,GAtNyB;AAwN1B;AACA;AAEA;AACAmJ,EAAAA,QA5N0B,oBA4NjBC,CA5NiB,EA4NdtB,CA5Nc,EA4NX;AACb,QAAMuB,OAAO,GAAGnL,QAAQ,CAACoL,UAAT,CAAoBF,CAApB,EAAuBtB,CAAvB,CAAhB;AACA,QAAM9H,GAAG,GAAG,KAAK8I,OAAL,CAAaO,OAAO,CAACrJ,GAArB,CAAZ;AACA,WAAOA,GAAG,GAAGA,GAAG,CAACmJ,QAAJ,CAAaE,OAAO,CAACjC,MAArB,CAAH,GAAkC7D,SAA5C;AACD,GAhOyB;AAkO1B;AACAgG,EAAAA,OAnO0B,mBAmOlBH,CAnOkB,EAmOftB,CAnOe,EAmOZ;AACZ,QAAMuB,OAAO,GAAGnL,QAAQ,CAACoL,UAAT,CAAoBF,CAApB,EAAuBtB,CAAvB,CAAhB;AACA,QAAM9H,GAAG,GAAG,KAAKuI,MAAL,CAAYc,OAAO,CAACrJ,GAApB,CAAZ;AACA,WAAOA,GAAG,CAACwJ,SAAJ,CAAcH,OAAd,CAAP;AACD,GAvOyB;AAyO1BI,EAAAA,UAzO0B,wBAyOb;AACX;AACA,QAAMjD,UAAU,GAAG,IAAIrI,UAAJ,CAAeuL,KAAK,CAAC1E,SAAN,CAAgB2E,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAf,CAAnB,CAFW,CAEkE;AAE7E;;AACA,SAAK3I,OAAL,CAAasE,OAAb,CAAqB,UAAAsE,KAAK,EAAI;AAC5B,UAAIA,KAAK,CAACC,UAAN,CAAiBvD,UAAjB,CAAJ,EAAkC;AAChC,cAAM,IAAIlB,KAAJ,CAAU,mCAAV,CAAN;AACD;AACF,KAJD,EALW,CAWX;;;AACA,QAAM0E,MAAM,GAAG,KAAKT,OAAL,CAAa/C,UAAU,CAAClE,GAAxB,EAA6BkE,UAAU,CAACpE,IAAxC,CAAf;;AACA,SAAK,IAAIkG,CAAC,GAAG9B,UAAU,CAAClE,GAAxB,EAA6BgG,CAAC,IAAI9B,UAAU,CAACjE,MAA7C,EAAqD+F,CAAC,EAAtD,EAA0D;AACxD,WAAK,IAAI2B,CAAC,GAAGzD,UAAU,CAACpE,IAAxB,EAA8B6H,CAAC,IAAIzD,UAAU,CAACnE,KAA9C,EAAqD4H,CAAC,EAAtD,EAA0D;AACxD,YAAI3B,CAAC,GAAG9B,UAAU,CAAClE,GAAf,IAAsB2H,CAAC,GAAGzD,UAAU,CAACpE,IAAzC,EAA+C;AAC7C,eAAKmH,OAAL,CAAajB,CAAb,EAAgB2B,CAAhB,EAAmBH,KAAnB,CAAyBE,MAAzB;AACD;AACF;AACF,KAnBU,CAqBX;;;AACA,SAAK9I,OAAL,CAAamG,IAAb,CAAkBb,UAAlB;AACD,GAhQyB;AAkQ1B;AACA0D,EAAAA,MAnQ0B,kBAmQnBC,IAnQmB,EAmQb;AACXzL,IAAAA,SAAS,CAAC0L,KAAV;AACA1L,IAAAA,SAAS,CAAC2L,OAAV,CAAkBF,IAAlB;AACA,SAAKlF,MAAL,CAAYqF,KAAZ,CAAkB5L,SAAlB;AACD,GAvQyB;AAwQ1B6L,EAAAA,qBAxQ0B,iCAwQJC,MAxQI,EAwQI7I,UAxQJ,EAwQgBO,SAxQhB,EAwQ2B;AACnD,QAAMuI,oBAAoB,GAAG;AAC3BC,MAAAA,iBAAiB,EAAE/I,UAAU,IAAIA,UAAU,CAAC+I,iBADjB;AAE3BC,MAAAA,QAAQ,EAAEhJ,UAAU,IAAIA,UAAU,CAACgJ,QAFR;AAG3BzI,MAAAA,SAAS,EACPA,SAAS,IAAIA,SAAS,CAACW,SAAvB,GACI;AACEA,QAAAA,SAAS,EAAEX,SAAS,CAACW;AADvB,OADJ,GAIIU;AARqB,KAA7B;AAWAiH,IAAAA,MAAM,CAACH,OAAP,CAAe7K,KAAK,CAACE,eAAN,CAAsBkL,KAAtB,CAA4BH,oBAA5B,CAAf;AACD,GArRyB;AAsR1BI,EAAAA,2BAtR0B,uCAsREL,MAtRF,EAsRU7I,UAtRV,EAsRsB;AAC9C,QAAMmJ,0BAA0B,GAAGnJ,UAAU,GACzC;AACEG,MAAAA,gBAAgB,EAAEH,UAAU,CAACG,gBAD/B;AAEEC,MAAAA,SAAS,EAAEJ,UAAU,CAACI,SAFxB;AAGEC,MAAAA,eAAe,EAAEL,UAAU,CAACK,eAH9B;AAIEC,MAAAA,eAAe,EAAEN,UAAU,CAACM;AAJ9B,KADyC,GAOzCsB,SAPJ;AASAiH,IAAAA,MAAM,CAACH,OAAP,CAAe7K,KAAK,CAACG,qBAAN,CAA4BiL,KAA5B,CAAkCE,0BAAlC,CAAf;AACD,GAjSyB;AAkS1B1G,EAAAA,mBAlS0B,iCAkSJ;AACpB1F,IAAAA,SAAS,CAAC0L,KAAV;AAEA1L,IAAAA,SAAS,CAAC2L,OAAV,CAAkB,yDAAlB;AACA3L,IAAAA,SAAS,CAAC2L,OAAV,CACE,iFACE,gFADF,GAEE,yEAFF,GAGE,uBAHF,GAIE,6EALJ;;AAQA,SAAKE,qBAAL,CAA2B7L,SAA3B,EAAsC,KAAKiD,UAA3C,EAAuD,KAAKO,SAA5D;;AAEAxD,IAAAA,SAAS,CAAC2L,OAAV,CAAkB7K,KAAK,CAACU,UAAN,CAAiB0K,KAAjB,CAAuB,KAAKzG,KAA5B,CAAlB;;AAEA,SAAK0G,2BAAL,CAAiCnM,SAAjC,EAA4C,KAAKiD,UAAjD;;AAEA,SAAKsD,MAAL,CAAYqF,KAAZ,CAAkB5L,SAAlB;AACD,GArTyB;AAsT1BqM,EAAAA,aAtT0B,2BAsTV;AACd,QAAMC,IAAI,GAAG1M,MAAM,CAAC2M,OAAP,CAAe,KAAKrL,OAApB,CAAb;;AACA,QAAIoL,IAAJ,EAAU;AACRxL,MAAAA,KAAK,CAACI,OAAN,CAAcsL,OAAd,CAAsBF,IAAtB,EAA4B;AAACG,QAAAA,MAAM,EAAE,KAAKpH,SAAL,CAAeoH;AAAxB,OAA5B;AACA,WAAKlG,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACI,OAAN,CAAcgL,KAAd,CAAoBI,IAApB,CAAlB;AACD;AACF,GA5TyB;AA6T1BrF,EAAAA,mBA7T0B,iCA6TJ;AACpB,SAAKuE,MAAL,CAAY,aAAZ;AACD,GA/TyB;AAgU1BxE,EAAAA,SAhU0B,qBAgUhB1F,GAhUgB,EAgUX;AACb,QAAI,CAAC,KAAK+E,WAAV,EAAuB;AACrB,WAAKgG,aAAL;;AACA,WAAKpF,mBAAL;;AACA,WAAKZ,WAAL,GAAmB,IAAnB;AACD;;AAED,QAAI/E,GAAG,CAACwI,SAAJ,IAAiBxI,GAAG,CAACoL,MAAzB,EAAiC;AAAA,UACxBC,KADwB,GACfrL,GADe,CACxBqL,KADwB;AAE/B,UAAM1K,OAAO,GAAG;AACdwK,QAAAA,MAAM,EAAE,KAAKpH,SAAL,CAAeoH,MADT;AAEdG,QAAAA,aAAa,EAAE,KAAKxH,gBAAL,GAAwB,KAAKC,SAAL,CAAeuH,aAAvC,GAAuD/H,SAFxD;AAGdtD,QAAAA,UAAU,EAAE,KAAKmB,gBAAL,CAAsBmK,eAHpB;AAIdC,QAAAA,MAAM,EAAE,KAAKtK,OAJC;AAKduK,QAAAA,QAAQ,EAAE,KAAKhK,SALD;AAMdiK,QAAAA,UAAU,EAAE,KAAKhK,WANH;AAOdiK,QAAAA,QAAQ,EAAE;AAPI,OAAhB;AASAnM,MAAAA,KAAK,CAACQ,GAAN,CAAUkL,OAAV,CAAkBG,KAAlB,EAAyB1K,OAAzB;AACA,WAAKsE,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACQ,GAAN,CAAU4K,KAAV,CAAgBS,KAAhB,CAAlB;;AAEA,UAAG1K,OAAO,CAACgL,QAAR,CAAiB7L,MAApB,EAA2B;AACzB,aAAKmE,WAAL,GAAmB,IAAnB;;AACA,aAAK5C,oBAAL,CAA0BuK,WAA1B,CAAsCjL,OAAO,CAACgL,QAA9C;AACD;AAEF;AACF,GA3VyB;AA4V1B/F,EAAAA,oBA5V0B,kCA4VH;AACrB,SAAKsE,MAAL,CAAY,cAAZ;AACD,GA9VyB;AA+V1BpE,EAAAA,gBA/V0B,8BA+VP;AACjB,QAAI,KAAK5E,OAAL,CAAapB,MAAjB,EAAyB;AACvBpB,MAAAA,SAAS,CAAC0L,KAAV;AACA1L,MAAAA,SAAS,CAAC2L,OAAV,+BAAwC,KAAKnJ,OAAL,CAAapB,MAArD;;AACA,WAAKoB,OAAL,CAAasE,OAAb,CAAqB,UAAAsE,KAAK,EAAI;AAC5BpL,QAAAA,SAAS,CAAC2L,OAAV,4BAAqCP,KAArC;AACD,OAFD;;AAGApL,MAAAA,SAAS,CAAC2L,OAAV,CAAkB,eAAlB;AAEA,WAAKpF,MAAL,CAAYqF,KAAZ,CAAkB5L,SAAlB;AACD;AACF,GA1WyB;AA2W1BqH,EAAAA,gBA3W0B,8BA2WP;AACjB;AACA,SAAKd,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACS,UAAN,CAAiB2K,KAAjB,CAAuB,KAAKxJ,gBAAL,CAAsByK,WAA7C,CAAlB;AACD,GA9WyB;AA+W1B7F,EAAAA,qBA/W0B,mCA+WF;AACtB,SAAKf,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACC,eAAN,CAAsBmL,KAAtB,CAA4B,KAAKnL,eAAL,CAAqB4L,KAAjD,CAAlB;AACD,GAjXyB;AAkX1BpF,EAAAA,qBAlX0B,mCAkXF;AACtB,SAAKhB,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACW,eAAN,CAAsByK,KAAtB,CAA4B,KAAKzK,eAAjC,CAAlB;AACD,GApXyB;AAqX1B+F,EAAAA,iBArX0B,+BAqXN;AAClB,SAAKjB,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACY,WAAN,CAAkBwK,KAAlB,CAAwB,KAAK1I,SAAL,CAAeC,OAAvC,CAAlB;AACD,GAvXyB;AAwX1BgE,EAAAA,eAxX0B,6BAwXR;AAChB,SAAKlB,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACa,UAAN,CAAiBuK,KAAjB,CAAuB,KAAK1I,SAA5B,CAAlB;AACD,GA1XyB;AA2X1B2D,EAAAA,gBA3X0B,8BA2XP;AACjB,SAAKZ,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACc,UAAN,CAAiBsK,KAAjB,CAAuB,KAAKtK,UAA5B,CAAlB;AACD,GA7XyB;AA8X1B8F,EAAAA,gBA9X0B,8BA8XP;AACjB,QAAI,KAAKvB,WAAT,EAAsB;AACpB,WAAKI,MAAL,CAAYqF,KAAZ,CAAkB9K,KAAK,CAACe,OAAN,CAAcqK,KAAd,CAAoB,KAAK/F,WAAzB,CAAlB;AACD;AACF,GAlYyB;AAmY1BwB,EAAAA,gBAnY0B,8BAmYP;AACjB,QAAG,KAAKpC,WAAR,EAAoB;AAClBvF,MAAAA,SAAS,CAAC0L,KAAV;AACA1L,MAAAA,SAAS,CAAC2L,OAAV,iCAA0C,KAAKhJ,oBAAL,CAA0ByK,QAApE;AACA,WAAK7G,MAAL,CAAYqF,KAAZ,CAAkB5L,SAAlB;AACD;AACF,GAzYyB;AA0Y1BqN,EAAAA,gBA1Y0B,8BA0YP,CACjB;AACA;AACA;AACD,GA9YyB;AA+Y1BzF,EAAAA,oBA/Y0B,kCA+YH;AACrB,SAAK4D,MAAL,CAAY,cAAZ;AACD;AAjZyB,CAA5B","sourcesContent":["'use strict';\n\nconst _ = require('../../utils/under-dash');\n\nconst RelType = require('../../xlsx/rel-type');\n\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\n\nconst StringBuf = require('../../utils/string-buf');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nconst SheetRelsWriter = require('./sheet-rels-writer');\nconst SheetCommentsWriter = require('./sheet-comments-writer');\nconst DataValidations = require('../../doc/data-validations');\n\nconst xmlBuffer = new StringBuf();\n\n// ============================================================================================\n// Xforms\nconst ListXform = require('../../xlsx/xform/list-xform');\nconst DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\nconst SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\nconst ColXform = require('../../xlsx/xform/sheet/col-xform');\nconst RowXform = require('../../xlsx/xform/sheet/row-xform');\nconst HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\nconst SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\nconst SheetProtectionXform = require('../../xlsx/xform/sheet/sheet-protection-xform');\nconst PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\nconst PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\nconst AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\nconst PictureXform = require('../../xlsx/xform/sheet/picture-xform');\n\n// since prepare and render is functional, we can use singletons\nconst xform = {\n  dataValidations: new DataValidationsXform(),\n  sheetProperties: new SheetPropertiesXform(),\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\n  columns: new ListXform({tag: 'cols', length: false, childXform: new ColXform()}),\n  row: new RowXform(),\n  hyperlinks: new ListXform({ tag: 'hyperlinks', length: false, childXform: new HyperlinkXform() }),\n  sheetViews: new ListXform({ tag: 'sheetViews', length: false, childXform: new SheetViewXform() }),\n  sheetProtection: new SheetProtectionXform(),\n  pageMargins: new PageMarginsXform(),\n  pageSeteup: new PageSetupXform(),\n  autoFilter: new AutoFilterXform(),\n  picture: new PictureXform(),\n};\n\n// ============================================================================================\n\nconst WorksheetWriter = (module.exports = function(options) {\n  // in a workbook, each sheet will have a number\n  this.id = options.id;\n\n  // and a name\n  this.name = options.name || `Sheet${this.id}`;\n\n  // add a state\n  this.state = options.state || 'visible';\n\n  // rows are stored here while they need to be worked on.\n  // when they are committed, they will be deleted.\n  this._rows = [];\n\n  // column definitions\n  this._columns = null;\n\n  // column keys (addRow convenience): key ==> this._columns index\n  this._keys = {};\n\n  // keep record of all merges\n  this._merges = [];\n  this._merges.add = function() {}; // ignore cell instruction\n\n  // keep record of all hyperlinks\n  this._sheetRelsWriter = new SheetRelsWriter(options);\n\n  this._sheetCommentsWriter = new SheetCommentsWriter(this, this._sheetRelsWriter, options);\n  \n\n  // keep a record of dimensions\n  this._dimensions = new Dimensions();\n\n  // first uncommitted row\n  this._rowZero = 1;\n\n  // committed flag\n  this.committed = false;\n\n  // for data validations\n  this.dataValidations = new DataValidations();\n\n  // for sharing formulae\n  this._formulae = {};\n  this._siFormulae = 0;\n\n  // for default row height, outline levels, etc\n  this.properties = Object.assign(\n    {},\n    {\n      defaultRowHeight: 15,\n      dyDescent: 55,\n      outlineLevelCol: 0,\n      outlineLevelRow: 0,\n    },\n    options.properties\n  );\n\n  // for all things printing\n  this.pageSetup = Object.assign(\n    {},\n    {\n      margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\n      orientation: 'portrait',\n      horizontalDpi: 4294967295,\n      verticalDpi: 4294967295,\n      fitToPage: !!(options.pageSetup && ((options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale)),\n      pageOrder: 'downThenOver',\n      blackAndWhite: false,\n      draft: false,\n      cellComments: 'None',\n      errors: 'displayed',\n      scale: 100,\n      fitToWidth: 1,\n      fitToHeight: 1,\n      paperSize: undefined,\n      showRowColHeaders: false,\n      showGridLines: false,\n      horizontalCentered: false,\n      verticalCentered: false,\n      rowBreaks: null,\n      colBreaks: null,\n    },\n    options.pageSetup\n  );\n\n  // using shared strings creates a smaller xlsx file but may use more memory\n  this.useSharedStrings = options.useSharedStrings || false;\n\n  this._workbook = options.workbook;\n\n  this.hasComments = false;\n\n  // views\n  this._views = options.views || [];\n\n  // auto filter\n  this.autoFilter = options.autoFilter || null;\n\n  // start writing to stream now\n  this._writeOpenWorksheet();\n\n  // background\n  if (options.background && options.background.type === 'image') {\n    const imageName = this._workbook.addMedia(options.background);\n    const pictureId = this._sheetRelsWriter.addMedia({\n      Target: `../media/${imageName}`,\n      Type: RelType.Image,\n    });\n    this._background = {\n      rId: pictureId,\n    };\n  }\n\n  this.startedData = false;\n});\n\nWorksheetWriter.prototype = {\n  get workbook() {\n    return this._workbook;\n  },\n\n  get stream() {\n    if (!this._stream) {\n      // eslint-disable-next-line no-underscore-dangle\n      this._stream = this._workbook._openStream(`/xl/worksheets/sheet${this.id}.xml`);\n\n      // pause stream to prevent 'data' events\n      this._stream.pause();\n    }\n    return this._stream;\n  },\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  },\n\n  commit() {\n    if (this.committed) {\n      return;\n    }\n    // commit all rows\n    this._rows.forEach(cRow => {\n      if (cRow) {\n        // write the row to the stream\n        this._writeRow(cRow);\n      }\n    });\n\n    // we _cannot_ accept new rows from now on\n    this._rows = null;\n\n\n    if (!this.startedData) {\n      this._writeOpenSheetData();\n    }\n    this._writeCloseSheetData();\n    this._writeAutoFilter();\n    this._writeMergeCells();\n\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // this._writeDimensions();\n\n    this._writeHyperlinks();\n    this._writeDataValidations();\n    this._writeSheetProtection();\n    this._writePageMargins();\n    this._writePageSetup();\n    this._writeBackground();\n    \n    // Legacy Data tag for comments\n    this._writeLegacyData();\n    \n    this._writeCloseWorksheet();\n    // signal end of stream to workbook\n    this.stream.end();\n\n    this._sheetCommentsWriter.commit();\n    // also commit the hyperlinks if any\n    this._sheetRelsWriter.commit();\n\n    this.committed = true;\n  },\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  },\n\n  get views() {\n    return this._views;\n  },\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  },\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  },\n\n  getColumnKey(key) {\n    return this._keys[key];\n  },\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  },\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  },\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  },\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  },\n\n  // =========================================================================\n  // Rows\n  get _nextRow() {\n    return this._rowZero + this._rows.length;\n  },\n\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._nextRow;\n      for (let i = this._rowZero; i < n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  },\n\n  _commitRow(cRow) {\n    // since rows must be written in order, we commit all rows up till and including cRow\n    let found = false;\n    while (this._rows.length && !found) {\n      const row = this._rows.shift();\n      this._rowZero++;\n      if (row) {\n        this._writeRow(row);\n        found = row.number === cRow.number;\n        this._rowZero = row.number + 1;\n      }\n    }\n  },\n\n  get lastRow() {\n    // returns last uncommitted row\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  },\n\n  // find a row (if exists) by row number\n  findRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n    return this._rows[index];\n  },\n\n  getRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n\n    // may fail if rows have been comitted\n    if (index < 0) {\n      throw new Error('Out of bounds: this row has been committed');\n    }\n    let row = this._rows[index];\n    if (!row) {\n      this._rows[index] = row = new Row(this, rowNumber);\n    }\n    return row;\n  },\n\n  addRow(value) {\n    const row = new Row(this, this._nextRow);\n    this._rows[row.number - this._rowZero] = row;\n    row.values = value;\n    return row;\n  },\n\n  // ================================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.findRow(address.row);\n    return row ? row.findCell(address.column) : undefined;\n  },\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  },\n\n  mergeCells() {\n    // may fail if rows have been comitted\n    const dimensions = new Dimensions(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // check cells aren't already merged\n    this._merges.forEach(merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges.push(dimensions);\n  },\n\n  // ================================================================================\n  _write(text) {\n    xmlBuffer.reset();\n    xmlBuffer.addText(text);\n    this.stream.write(xmlBuffer);\n  },\n  _writeSheetProperties(xmlBuf, properties, pageSetup) {\n    const sheetPropertiesModel = {\n      outlineProperties: properties && properties.outlineProperties,\n      tabColor: properties && properties.tabColor,\n      pageSetup:\n        pageSetup && pageSetup.fitToPage\n          ? {\n              fitToPage: pageSetup.fitToPage,\n            }\n          : undefined,\n    };\n\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\n  },\n  _writeSheetFormatProperties(xmlBuf, properties) {\n    const sheetFormatPropertiesModel = properties\n      ? {\n          defaultRowHeight: properties.defaultRowHeight,\n          dyDescent: properties.dyDescent,\n          outlineLevelCol: properties.outlineLevelCol,\n          outlineLevelRow: properties.outlineLevelRow,\n        }\n      : undefined;\n\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\n  },\n  _writeOpenWorksheet() {\n    xmlBuffer.reset();\n\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\n    xmlBuffer.addText(\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\n        ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\n        ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\n        ' mc:Ignorable=\"x14ac\"' +\n        ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">'\n    );\n\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\n\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\n\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\n\n    this.stream.write(xmlBuffer);\n  },\n  _writeColumns() {\n    const cols = Column.toModel(this.columns);\n    if (cols) {\n      xform.columns.prepare(cols, {styles: this._workbook.styles});\n      this.stream.write(xform.columns.toXml(cols));\n    }\n  },\n  _writeOpenSheetData() {\n    this._write('<sheetData>');\n  },\n  _writeRow(row) {\n    if (!this.startedData) {\n      this._writeColumns();\n      this._writeOpenSheetData();\n      this.startedData = true;\n    }\n\n    if (row.hasValues || row.height) {\n      const {model} = row;\n      const options = {\n        styles: this._workbook.styles,\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\n        merges: this._merges,\n        formulae: this._formulae,\n        siFormulae: this._siFormulae,\n        comments: [],\n      };\n      xform.row.prepare(model, options);\n      this.stream.write(xform.row.toXml(model));\n\n      if(options.comments.length){\n        this.hasComments = true;\n        this._sheetCommentsWriter.addComments(options.comments);\n      }\n      \n    }\n  },\n  _writeCloseSheetData() {\n    this._write('</sheetData>');\n  },\n  _writeMergeCells() {\n    if (this._merges.length) {\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<mergeCells count=\"${this._merges.length}\">`);\n      this._merges.forEach(merge => {\n        xmlBuffer.addText(`<mergeCell ref=\"${merge}\"/>`);\n      });\n      xmlBuffer.addText('</mergeCells>');\n\n      this.stream.write(xmlBuffer);\n    }\n  },\n  _writeHyperlinks() {\n    // eslint-disable-next-line no-underscore-dangle\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\n  },\n  _writeDataValidations() {\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\n  },\n  _writeSheetProtection() {\n    this.stream.write(xform.sheetProtection.toXml(this.sheetProtection));\n  },\n  _writePageMargins() {\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\n  },\n  _writePageSetup() {\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\n  },\n  _writeAutoFilter() {\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\n  },\n  _writeBackground() {\n    if (this._background) {\n      this.stream.write(xform.picture.toXml(this._background));\n    }\n  },\n  _writeLegacyData() {\n    if(this.hasComments){\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<legacyDrawing r:id=\"${this._sheetCommentsWriter.vmlRelId}\"/>`);\n      this.stream.write(xmlBuffer);\n    }\n  },\n  _writeDimensions() {\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // and we don't know the dimensions until the commit, so don't write them.\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\n  },\n  _writeCloseWorksheet() {\n    this._write('</worksheet>');\n  },\n};\n"],"file":"worksheet-writer.js"}